#!/bin/bash

alias glo='git log --oneline'
alias ..="cd .." # TODO try to get the same behavior as zsh

function fpush() {
   branch=`git branch --show-current`
   echo "pushing and setting upstream to ${GREEN}${branch}${NOCOLOR}"

   git push $1 --set-upstream origin $branch $2
}

function commit() {
   git add .
   files=`git diff --name-only --cached`
   echo "commiting files:"
   echo
   echo "${GREEN}${files}${NOCOLOR}"

   inputed_message="$1"
   shift
   rest_args="$@"

   if test -z "$inputed_message"
   then
      commitmsg=`git branch --show-current | awk '{gsub("/",": "); print}' | awk '{gsub("-"," "); print}'`
   else
      commitmsg="$inputed_message"
   fi
   
   echo "with message ${GREEN}${commitmsg}${NOCOLOR}"
   echo "${YELLOW}please confirm${NOCOLOR}"

   function add_commit() {
      echo
      git commit -m "${commitmsg}" "$rest_args"
   }

   function exit_commit() {
      echo
      echo "${RED}Exiting...${NOCOLOR}"
      git reset
   }

   PROCEED="Proceed with commit"
   EXIT_STAGE="Exit and reset staged"

   select yn in "$PROCEED" "$EXIT_STAGE"; do
      case $yn in
         "$PROCEED" ) add_commit; break;;
         "$EXIT_STAGE" ) exit_commit; break;;
      esac
   done
}

function checkout() {
   git checkout master
   git pull --rebase --quiet
   git branch | xargs git branch -D
}

function checkout() {
   current_branch=$(git rev-parse --abbrev-ref HEAD)

   if test -z "$1"; then
      branch_to_checkout=$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')
   else
      branch_to_checkout="$1"
   fi

   if [ $current_branch != branch_to_checkout ]; then
      git checkout $branch_to_checkout
   fi

   git pull --rebase --quiet

   local_branchs=$(git for-each-ref --format='%(refname:short)' refs/heads/ | sed s/$current_branch// )

   if test -n "$local_branchs"; then
      echo $local_branchs | xargs git branch -D
   fi
}

function git_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}

export PS1="\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\] \$(git_branch) ‚ùØ "
